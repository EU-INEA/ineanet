<?php
/**
 * @file
 * Cordis feature install file.
 */

/**
 * Implements hook_feature_enabled().
 */
function cordis_feature_enable() {
  // SolR configuration add bundle.
  multisite_drupal_toolbox_config_solr_bundle('projects', 'add');

  // SolR configuration add bundle.
  multisite_drupal_toolbox_config_solr_bundle('programmes_and_projects', 'add');
  drupal_set_message(t('Cordis import is enabled on your site.'));
}

/**
 * Implements hook_feature_update().
 */
function cordis_feature_update_7200() {
  $block = 'ongoing_projects_link';
  db_delete('block')
    ->condition('delta', $block)
    ->execute();
}

/**
 * Implements hook_feature_disable().
 */
function cordis_feature_disable() {
  // SolR configuration delete bundle.
  multisite_drupal_toolbox_config_solr_bundle('projects', 'delete');
  // SolR configuration delete bundle.
  multisite_drupal_toolbox_config_solr_bundle('programmes_and_projects', 'delete');
  // Disable content types.
  multisite_drupal_toolbox_disable_content_type('project');
  multisite_drupal_toolbox_disable_content_type('programmes_and_projects');
  multisite_drupal_toolbox_disable_content_type('cordis_importer');
  drupal_set_message(t('Cordis import is disabled on your site.'));
}

/**
 * Removes unnecessary fields.
 */
function cordis_feature_update_7210() {
  // http://api.drupal.org/api/function/field_delete_instance/7 .
  if ($instance = field_info_instance('node', 'field_shared_chapter', 'project')) {
    field_delete_instance($instance);
  }
  if ($instance = field_info_instance('node', 'field_shared_chapter', 'programmes_and_projects')) {
    field_delete_instance($instance);
  }
  if ($instance = field_info_instance('node', 'field_shared_chapter_term', 'programmes_and_projects')) {
    field_delete_instance($instance);
  }

  field_delete_field('field_proj_sic_code');
  field_delete_field('field_shared_chapter_term');

  // Purge all field infromation.
  // http://api.drupal.org/api/function/field_purge_batch/7 .
  field_purge_batch(1000);
  return t('The following fields have been deleted from your db:
      	field_proj_sic_code, 
      	field_shared_chapter_term');
}

/**
 * Move the country field data to a new ec_world_countries field.
 */
function cordis_feature_update_7220() {
  // Try to match the old taxonomy terms and new by the country code.
  $items = db_select('field_data_field_shared_country', 'f')->distinct();
  $items->fields('f', array('entity_type',
      'bundle',
      'deleted',
      'entity_id',
      'revision_id',
      'language',
      'delta',
      'field_shared_country_tid',
  ));
  $items->fields('i1', array('entity_id'));
  $items->join('field_data_field_country_iso_code', 'i', 'i.entity_id = f.field_shared_country_tid');
  $items->join('field_data_iso_3166_1_alpha_2_code', 'i1', 'i.field_country_iso_code_value = i1.iso_3166_1_alpha_2_code_value');
  $items->condition('f.bundle', 'project', '=');
  $items->condition('i.bundle', 'country', '=');
  $items->condition('i1.bundle', 'ec_world_countries', '=');
  $result = $items->execute();

  while ($item = $result->fetchAssoc()) {
    $new_item = db_select('field_data_field_cordis_country', 'f')
      ->fields('f')
      ->condition('bundle', 'project', '=')
      ->condition('field_cordis_country_tid', $item['i1_entity_id'], '=')
      ->condition('entity_id', $item['entity_id'], '=')
      ->execute()
      ->fetchField();

    if (empty($new_item)) {
      db_insert('field_data_field_cordis_country')->fields(array(
        'entity_type' => $item['entity_type'],
        'bundle' => $item['bundle'],
        'deleted' => $item['deleted'],
        'entity_id' => $item['entity_id'],
        'revision_id' => $item['revision_id'],
        'language' => $item['language'],
        'delta' => $item['delta'],
        'field_cordis_country_tid' => $item['i1_entity_id'],

      ))->execute();
    }
  }
}
