<?php
/**
 * @file
 * Code for the Cordis feature.
 */

include_once 'cordis_feature.features.inc';

/**
 * Implements hook_set_api().
 */
function cordis_feature_set_api() {
  return array('version' => '1.0');
}

/**
 * Implements hook_views_query_alter().
 */
function cordis_feature_views_query_alter(&$view, &$query) {

  if ($view->name == 'subprogramme_area_projects') {
    $node = menu_get_object();
    if ($node) {
      $included_items = array();
      $excluded_items = array();
      $subprogramme_items = array();

      // Collect ids from the entityreference field.
      if (count($node->field_subprogramme_area) > 0) {
        foreach ($node->field_subprogramme_area[LANGUAGE_NONE] as $item) {
          $subprogramme_items[] = $item['tid'];
        }
      }

      // Collect ids from the entityreference field.
      if (count($node->field_included_projects) > 0) {
        foreach ($node->field_included_projects[LANGUAGE_NONE] as $item) {
          $included_items[] = $item['target_id'];
        }
      }

      // Collect ids from the entityreference field.
      if (count($node->field_excluded_projects) > 0) {
        foreach ($node->field_excluded_projects[LANGUAGE_NONE] as $item) {
          $excluded_items[] = $item['target_id'];
        }
      }

      // Add custom condition for subprogrammes codes.
      if (count($subprogramme_items) > 0) {
        $join = new views_join();
        $join->table = 'field_data_field_subprogramme_area';
        $join->left_table = 'node';
        $join->left_field = 'nid';
        $join->field = 'entity_id';
        $join->type = 'INNER';
        $query->add_relationship('field_data_field_subprogramme_area', $join, 'field_data_field_subprogramme_area');

        $items = implode(',', $subprogramme_items);
        $query->add_where_expression('0', 'field_data_field_subprogramme_area.field_subprogramme_area_tid IN (' . $items . ')', array());
      }

      // Add custom condition to exclude unnecessary items.
      if (count($excluded_items) > 0) {
        $items = implode(',', $excluded_items);
        $query->add_where_expression(0, 'node.nid NOT IN (' . $items . ')', array());
      }

      // Add custom condition to include necessary items.
      if (count($included_items) > 0) {
        $items = implode(',', $included_items);
        $group = '0';
        if (count($subprogramme_items) > 0) {
          // Rearrange previous conditions to put them together in the group.
          foreach ($query->where[0]['conditions'] as $condition) {
            $query->where[1]['conditions'][] = $condition;
          }

          unset($query->where[0]);

          $group = '2';
        }

        $query->add_where_expression($group, 'node.nid IN (' . $items . ')', array());
      }
    }
  }
}

/**
 * Implements hook_node_view().
 */
function cordis_feature_node_view($node, $view_mode) {
  if ($node->type == 'project' && $view_mode == 'full') {
    drupal_goto('http://cordis.europa.eu/projects/rcn/' . $node->field_proj_rcn[LANGUAGE_NONE][0]['value'] . '_en.html', array(), 303);
  }
}
